openapi: 3.0.2
info:
  title: Burmese Jewellery
  description: API documentaion for Burmese Jewellery.
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://localhost:8077
    description: Local environment
tags:
  - name: admin
    description: Admin
  - name: app
    description: App
  - name: others
    description: Others
paths:
  /api:
    get:
      tags:
        - app
      summary: Display the main page
      responses:
        200:
          description: Main page displayed successfully
  /api/health_check:
    get:
      tags:
        - others
      summary: Health Check
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    default: OK
                required:
                  - message
  /api/auth/google/login:
    get:
      tags:
        - app
      summary: Initiate Google OAuth2 login
      responses:
        302:
          description: Redirect to Google OAuth2 login page
  /api/auth/google/callback:
    get:
      tags:
        - app
      summary: Handle Google OAuth2 callback
      parameters:
        - name: state
          in: query
          required: true
          schema:
            type: string
          description: OAuth2 state parameter
        - name: code
          in: query
          required: true
          schema:
            type: string
          description: OAuth2 code parameter
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthGoogleCallbackResp'
  /api/admin/login:
    post:
      summary: Login as admin user
      tags:
        - admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountAdminLoginParam'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
  /api/admin/account_admin:
    get:
      summary: List admin user
      tags:
        - admin
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
          required: true
          default: 0
        - in: query
          name: limit
          schema:
            type: integer
          required: true
          default: 30
        - in: query
          name: id
          schema:
            $ref: '#/components/schemas/ID'
        - in: query
          name: mail
          schema:
            type: string
        - in: query
          name: account_admin_role
          schema:
            $ref: '#/components/schemas/AccountAdminRole'
        - in: query
          name: account_admin_status
          schema:
            $ref: '#/components/schemas/AccountAdminStatus'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountAdmin'
    post:
      tags:
        - admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountAdminPostParam'
      responses:
        200:
          description: OK
  /api/admin/account_admin/{account_admins_id}:
    get:
      summary: Get admin user
      tags:
        - admin
      parameters:
        - in: path
          name: account_admins_id
          required: true
          schema:
            $ref: '#/components/schemas/ID'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountAdmin'
    put:
      summary: Edit admin user
      tags:
        - admin
      parameters:
        - in: path
          name: account_admins_id
          required: true
          schema:
            $ref: '#/components/schemas/ID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountAdminPutParam'
      responses:
        200:
          description: OK
    delete:
      summary: Delete admin user
      tags:
        - admin
      parameters:
        - in: path
          name: account_admins_id
          required: true
          schema:
            $ref: '#/components/schemas/ID'
      responses:
        204:
          description: Deleted
  /api/admin/account:
    get:
      summary: List user
      tags:
        - admin
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
          required: true
          default: 0
        - in: query
          name: limit
          schema:
            type: integer
          required: true
          default: 30
        - in: query
          name: id
          schema:
            $ref: '#/components/schemas/ID'
        - in: query
          name: first_name
          schema:
            type: string
        - in: query
          name: last_name
          schema:
            type: string
        - in: query
          name: account_status
          schema:
            $ref: '#/components/schemas/AccountStatus'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountWithProfile'
  /api/admin/account/{account_id}:
    get:
      summary: Get user
      tags:
        - admin
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/ID'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
    put:
      summary: Update user status
      tags:
        - admin
      parameters:
        - in: path
          name: account_id
          required: true
          schema:
            $ref: '#/components/schemas/ID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountStatusPutParam'
      responses:
        200:
          description: OK
  /api/jewellery:
    get:
      tags:
        - app
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
          required: true
          default: 0
        - in: query
          name: limit
          schema:
            type: integer
          required: true
          default: 30
        - in: query
          name: id
          schema:
            $ref: '#/components/schemas/ID'
        - in: query
          name: category_id
          schema:
            $ref: '#/components/schemas/ID'
        - in: query
          name: gem_id
          schema:
            $ref: '#/components/schemas/ID'
        - in: query
          name: material_id
          schema:
            $ref: '#/components/schemas/ID'
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: is_published
          schema:
            type: boolean
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Jewellery'
  /api/jewellery/{jewellery_id}:
    get:
      tags:
        - app
      parameters:
        - in: path
          name: jewellery_id
          required: true
          schema:
            $ref: '#/components/schemas/ID'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Jewellery'
  /api/admin/jewellery:
    post:
      tags:
        - admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JewelleryPostParam'
      responses:
        200:
          description: OK
  /api/admin/jewellery/{jewellery_id}:
    put:
      tags:
        - admin
      parameters:
        - in: path
          name: jewellery_id
          required: true
          schema:
            $ref: '#/components/schemas/ID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JewelleryPutParam'
      responses:
        200:
          description: OK
    delete:
      tags:
        - admin
      parameters:
        - in: path
          name: jewellery_id
          required: true
          schema:
            $ref: '#/components/schemas/ID'
      responses:
        204:
          description: Deleted
  /api/category:
    get:
      tags:
        - app
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
  /api/admin/category:
    post:
      tags:
        - admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryPostParam'
      responses:
        200:
          description: OK
  /api/admin/category/{category_id}:
    put:
      tags:
        - admin
      parameters:
        - in: path
          name: category_id
          required: true
          schema:
            $ref: '#/components/schemas/ID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryPutParam'
      responses:
        200:
          description: OK
    delete:
      tags:
        - admin
      parameters:
        - in: path
          name: category_id
          required: true
          schema:
            $ref: '#/components/schemas/ID'
      responses:
        204:
          description: Deleted
  /api/gem:
    get:
      tags:
        - app
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Gem'
  /api/admin/gem:
    post:
      tags:
        - admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GemPostParam'
      responses:
        200:
          description: OK
  /api/admin/gem/{gem_id}:
    put:
      tags:
        - admin
      parameters:
        - in: path
          name: gem_id
          required: true
          schema:
            $ref: '#/components/schemas/ID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GemPutParam'
      responses:
        200:
          description: OK
    delete:
      tags:
        - admin
      parameters:
        - in: path
          name: gem_id
          required: true
          schema:
            $ref: '#/components/schemas/ID'
      responses:
        204:
          description: Deleted
  /api/material:
    get:
      tags:
        - app
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Material'
  /api/admin/material:
    post:
      tags:
        - admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialPostParam'
      responses:
        200:
          description: OK
  /api/admin/material/{material_id}:
    put:
      tags:
        - admin
      parameters:
        - in: path
          name: material_id
          required: true
          schema:
            $ref: '#/components/schemas/ID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialPutParam'
      responses:
        200:
          description: OK
    delete:
      tags:
        - admin
      parameters:
        - in: path
          name: material_id
          required: true
          schema:
            $ref: '#/components/schemas/ID'
      responses:
        204:
          description: Deleted
  /api/faq:
    get:
      tags:
        - app
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
          required: true
          default: 0
        - in: query
          name: limit
          schema:
            type: integer
          required: true
          default: 30
        - in: query
          name: id
          schema:
            $ref: '#/components/schemas/ID'
        - in: query
          name: question
          schema:
            type: string
        - in: query
          name: answer
          schema:
            type: string
        - in: query
          name: is_active
          schema:
            type: boolean
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FAQ'
  /api/admin/faq:
    post:
      tags:
        - admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FAQPostParam'
      responses:
        200:
          description: OK
  /api/admin/faq/{faq_id}:
    put:
      tags:
        - admin
      parameters:
        - in: path
          name: faq_id
          required: true
          schema:
            $ref: '#/components/schemas/ID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FAQPutParam'
      responses:
        200:
          description: OK
    delete:
      tags:
        - admin
      parameters:
        - in: path
          name: faq_id
          required: true
          schema:
            $ref: '#/components/schemas/ID'
      responses:
        204:
          description: Deleted
  /api/profile:
    get:
      tags:
        - app
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountProfile'
    post:
      tags:
        - app
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountProfilePostParam'
      responses:
        200:
          description: OK
components:
  parameters: null
  schemas:
    AuthGoogleCallbackResp:
      type: object
      properties:
        account:
          $ref: '#/components/schemas/Account'
        is_registered:
          type: boolean
          example: true
      required:
        - is_registered
    ErrMsg:
      description: Error Message
      properties:
        version:
          type: string
          description: Application Version
        message:
          type: string
          description: Error message
    ID:
      type: string
      format: uuid
    AccountAdminRole:
      type: string
      maxLength: 255
      example: staff
      enum:
        - admin
        - staff
    AccountAdminStatus:
      type: string
      maxLength: 255
      enum:
        - active
        - locked
        - deactivated
      example: active
    AccountAdmin:
      type: object
      properties:
        account_admin_id:
          type: string
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        mail:
          type: string
          maxLength: 255
          format: email
          example: test@gmail.com
        account_admin_role:
          $ref: '#/components/schemas/AccountAdminRole'
        account_admin_status:
          $ref: '#/components/schemas/AccountAdminStatus'
        created_at:
          type: string
          format: date-time
          example: 2020-01-01 00:00:00+00:00
        updated_at:
          type: string
          format: date-time
          example: 2020-01-01 00:00:00+00:00
      required:
        - account_admin_id
        - mail
        - account_admin_role
        - account_admin_status
        - created_at
        - updated_at
    AccountAdminLoginParam:
      type: object
      properties:
        mail:
          type: string
          maxLength: 255
          format: email
          example: test@gmail.com
        password:
          type: string
          maxLength: 255
          example: '*****'
      required:
        - mail
        - password
    AccountAdminPostParam:
      type: object
      properties:
        mail:
          type: string
          maxLength: 255
          format: email
          example: test@gmail.com
        password:
          type: string
          maxLength: 255
          example: '*****'
        account_admin_role:
          $ref: '#/components/schemas/AccountAdminRole'
        account_admin_status:
          $ref: '#/components/schemas/AccountAdminStatus'
      required:
        - mail
        - password
        - account_admin_role
        - account_admin_status
    AccountAdminPutParam:
      type: object
      properties:
        password:
          type: string
          maxLength: 255
          example: '*****'
        account_admin_role:
          $ref: '#/components/schemas/AccountAdminRole'
        account_admin_status:
          $ref: '#/components/schemas/AccountAdminStatus'
    AccountStatus:
      type: string
      maxLength: 255
      example: active
      enum:
        - pending
        - active
        - locked
        - deactivated
    Account:
      type: object
      properties:
        account_id:
          type: string
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        login_type:
          type: string
          maxLength: 255
          example: email
          enum:
            - email
            - phone
            - google
            - facebook
        login_id:
          type: string
          maxLength: 255
          example: 101176734510758999999
        mail:
          type: string
          maxLength: 255
          format: email
          example: test@gmail.com
        phone:
          type: string
          maxLength: 255
          example: 08088889999
        account_status:
          $ref: '#/components/schemas/AccountStatus'
        created_at:
          type: string
          format: date-time
          example: 2020-01-01 00:00:00+00:00
        updated_at:
          type: string
          format: date-time
          example: 2020-01-01 00:00:00+00:00
      required:
        - account_id
        - login_type
        - account_status
        - created_at
        - updated_at
    AccountStatusPutParam:
      type: object
      properties:
        account_status:
          $ref: '#/components/schemas/AccountStatus'
      required:
        - account_status
    AccountWithProfile:
      type: object
      properties:
        account:
          $ref: '#/components/schemas/Account'
        account_profile:
          $ref: '#/components/schemas/AccountProfile'
      required:
        - account
        - account_profile
    Gender:
      type: string
      maxLength: 255
      example: male
      enum:
        - male
        - female
        - unspecified
    AccountProfile:
      type: object
      properties:
        account_id:
          type: string
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        first_name:
          type: string
          maxLength: 255
          example: John
        last_name:
          type: string
          maxLength: 255
          example: Wallet
        birthday:
          type: string
          format: date
          example: 1990-01-01
        gender:
          $ref: '#/components/schemas/Gender'
        created_at:
          type: string
          format: date-time
          example: 2020-01-01 00:00:00+00:00
        updated_at:
          type: string
          format: date-time
          example: 2020-01-01 00:00:00+00:00
      required:
        - account_id
        - first_name
        - last_name
        - birthday
        - gender
        - created_at
        - updated_at
    AccountProfilePostParam:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 255
          example: John
        last_name:
          type: string
          maxLength: 255
          example: Wallet
        birthday:
          type: string
          format: date
          example: 1990-01-01
        gender:
          $ref: '#/components/schemas/Gender'
      required:
        - first_name
        - last_name
    Jewellery:
      type: object
      properties:
        jewellery_id:
          type: string
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        category_id:
          type: string
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        gem_id:
          type: string
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        material_id:
          type: string
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        name:
          type: string
          maxLength: 255
          example: Wedding Forever
        description:
          type: string
          maxLength: 255
          example: Wedding Forever in Platinum with a Half-circle of Diamonds, 2.2
            mm
        quantity:
          type: integer
          format: int
          example: 100
        price:
          type: integer
          format: float64
          example: 10000
        image_url:
          type: string
          example: https://media.tiffany.com/is/image/Tiffany/EcomItemL2/tiffany-foreverband-ring-16574635_1045538_ED_M.jpg?&op_usm=1.75,1.0,6.0&$cropN=0.1,0.1,0.8,0.8&defaultImage=NoImageAvailableInternal&&defaultImage=NoImageAvailableInternal&fmt=webp
        is_published:
          type: boolean
          example: true
        created_at:
          type: string
          format: date-time
          example: 2020-01-01 00:00:00+00:00
        updated_at:
          type: string
          format: date-time
          example: 2020-01-01 00:00:00+00:00
      required:
        - jewellery_id
        - category_id
        - gem_id
        - material_id
        - name
        - description
        - quantity
        - price
        - image_url
        - is_published
        - created_at
        - updated_at
    JewelleryPostParam:
      type: object
      properties:
        category_id:
          type: string
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        gem_id:
          type: string
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        material_id:
          type: string
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        name:
          type: string
          maxLength: 255
          example: Wedding Forever
        description:
          type: string
          maxLength: 255
          example: Wedding Forever in Platinum with a Half-circle of Diamonds, 2.2
            mm
        quantity:
          type: integer
          format: int
          example: 100
        price:
          type: integer
          format: float64
          example: 10000
        image_url:
          type: string
          example: https://media.tiffany.com/is/image/Tiffany/EcomItemL2/tiffany-foreverband-ring-16574635_1045538_ED_M.jpg?&op_usm=1.75,1.0,6.0&$cropN=0.1,0.1,0.8,0.8&defaultImage=NoImageAvailableInternal&&defaultImage=NoImageAvailableInternal&fmt=webp
        is_published:
          type: boolean
          example: true
      required:
        - category_id
        - gem_id
        - material_id
        - name
        - description
        - quantity
        - price
        - image_url
        - is_published
    JewelleryPutParam:
      type: object
      properties:
        category_id:
          type: string
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        gem_id:
          type: string
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        material_id:
          type: string
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        name:
          type: string
          maxLength: 255
          example: Wedding Forever
        description:
          type: string
          maxLength: 255
          example: Wedding Forever in Platinum with a Half-circle of Diamonds, 2.2
            mm
        quantity:
          type: integer
          format: int
          example: 100
        price:
          type: integer
          format: float64
          example: 10000
        image_url:
          type: string
          example: https://media.tiffany.com/is/image/Tiffany/EcomItemL2/tiffany-foreverband-ring-16574635_1045538_ED_M.jpg?&op_usm=1.75,1.0,6.0&$cropN=0.1,0.1,0.8,0.8&defaultImage=NoImageAvailableInternal&&defaultImage=NoImageAvailableInternal&fmt=webp
        is_published:
          type: boolean
          example: true
      required:
        - category_id
        - gem_id
        - material_id
        - name
        - description
        - quantity
        - price
        - image_url
        - is_published
    Category:
      type: object
      properties:
        category_id:
          type: string
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        name:
          type: string
          maxLength: 255
          example: Engagement Rings
        description:
          type: string
          maxLength: 255
          example: Engagement Rings
        image_url:
          type: string
          example: https://media.tiffany.com/is/image/tiffanydm/2023_EngagementRing_BG_Hero-Desktop?$tile$&wid=2992&fmt=webp
        created_at:
          type: string
          format: date-time
          example: 2020-01-01 00:00:00+00:00
        updated_at:
          type: string
          format: date-time
          example: 2020-01-01 00:00:00+00:00
      required:
        - category_id
        - name
        - description
        - image_url
        - created_at
        - updated_at
    CategoryPostParam:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
          example: Engagement Rings
        description:
          type: string
          maxLength: 255
          example: Engagement Rings
        image_url:
          type: string
          example: https://media.tiffany.com/is/image/tiffanydm/2023_EngagementRing_BG_Hero-Desktop?$tile$&wid=2992&fmt=webp
      required:
        - name
        - description
        - image_url
    CategoryPutParam:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
          example: Engagement Rings
        description:
          type: string
          maxLength: 255
          example: Engagement Rings
        image_url:
          type: string
          example: https://media.tiffany.com/is/image/tiffanydm/2023_EngagementRing_BG_Hero-Desktop?$tile$&wid=2992&fmt=webp
      required:
        - name
        - description
        - image_url
    Gem:
      type: object
      properties:
        gem_id:
          type: string
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        name:
          type: string
          maxLength: 255
          example: Diamond
        created_at:
          type: string
          format: date-time
          example: 2020-01-01 00:00:00+00:00
        updated_at:
          type: string
          format: date-time
          example: 2020-01-01 00:00:00+00:00
      required:
        - gem_id
        - name
        - created_at
        - updated_at
    GemPostParam:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
          example: Diamond
      required:
        - name
    GemPutParam:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
          example: Diamond
      required:
        - name
    Material:
      type: object
      properties:
        material_id:
          type: string
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        name:
          type: string
          maxLength: 255
          example: Gold
        created_at:
          type: string
          format: date-time
          example: 2020-01-01 00:00:00+00:00
        updated_at:
          type: string
          format: date-time
          example: 2020-01-01 00:00:00+00:00
      required:
        - material_id
        - name
        - created_at
        - updated_at
    MaterialPostParam:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
          example: Gold
      required:
        - name
    MaterialPutParam:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
          example: Gold
      required:
        - name
    FAQ:
      type: object
      properties:
        faq_id:
          type: string
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        question:
          type: string
          maxLength: 255
          example: Can I get refund of my order?
        answer:
          type: string
          maxLength: 255
          example: Yes. We have provided a trustworthy refund system for customers.
        is_active:
          type: boolean
          example: true
        created_at:
          type: string
          format: date-time
          example: 2020-01-01 00:00:00+00:00
        updated_at:
          type: string
          format: date-time
          example: 2020-01-01 00:00:00+00:00
      required:
        - faq_id
        - question
        - answer
        - is_active
        - created_at
        - updated_at
    FAQPostParam:
      type: object
      properties:
        question:
          type: string
          maxLength: 255
          example: Can I get refund of my order?
        answer:
          type: string
          maxLength: 255
          example: Yes. We have provided a trustworthy refund system for customers.
        is_active:
          type: boolean
          example: true
      required:
        - question
        - answer
        - is_active
    FAQPutParam:
      type: object
      properties:
        question:
          type: string
          maxLength: 255
          example: Can I get refund of my order?
        answer:
          type: string
          maxLength: 255
          example: Yes. We have provided a trustworthy refund system for customers.
        is_active:
          type: boolean
          example: true
      required:
        - question
        - answer
        - is_active
