/api:
  get:
    tags:
      - app
    summary: Display the main page
    responses:
      200:
        description: Main page displayed successfully
/api/health_check:
  get:
    tags:
      - others
    summary: Health Check
    responses:
      200:
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  default: OK
              required:
                - message

/api/auth/google/login:
  get:
    tags:
      - app
    summary: Initiate Google OAuth2 login
    responses:
      302:
        description: Redirect to Google OAuth2 login page
/api/auth/google/callback:
  get:
    tags:
      - app
    summary: Handle Google OAuth2 callback
    parameters:
      - name: state
        in: query
        required: true
        schema:
          type: string
        description: OAuth2 state parameter
      - name: code
        in: query
        required: true
        schema:
          type: string
        description: OAuth2 code parameter
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthGoogleCallbackResp"

/api/admin/login:
  post:
    summary: Login as admin user
    tags:
      - admin
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AccountAdminLoginParam"
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string

/api/admin/account_admin:
  get:
    summary: List admin user
    tags:
      - admin
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/AccountAdmin"
  post:
    tags:
      - admin
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AccountAdminPostParam"
    responses:
      200:
        description: OK
/api/admin/account_admin/{account_admins_id}:
  get:
    summary: Get admin user
    tags:
      - admin
    parameters:
      - in: path
        name: account_admins_id
        required: true
        schema:
          $ref: "#/components/schemas/ID"
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountAdmin"
  put:
    summary: Edit admin user
    tags:
      - admin
    parameters:
      - in: path
        name: account_admins_id
        required: true
        schema:
          $ref: "#/components/schemas/ID"
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AccountAdminPutParam"
    responses:
      200:
        description: OK
  delete:
    summary: Delete admin user
    tags:
      - admin
    parameters:
      - in: path
        name: account_admins_id
        required: true
        schema:
          $ref: "#/components/schemas/ID"
    responses:
      204:
        description: Deleted

/api/admin/account:
  get:
    summary: List user
    tags:
      - admin
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Account"
/api/admin/account/{account_id}:
  get:
    summary: Get user
    tags:
      - admin
    parameters:
      - in: path
        name: account_id
        required: true
        schema:
          $ref: "#/components/schemas/ID"
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Account"
  put:
    summary: Update user status
    tags:
      - admin
    parameters:
      - in: path
        name: account_id
        required: true
        schema:
          $ref: "#/components/schemas/ID"
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AccountStatusPutParam"

/api/jewellery:
  get:
    tags:
      - app
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Jewellery"
  post:
    tags:
      - admin
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/JewelleryPostParam"
    responses:
      200:
        description: OK
